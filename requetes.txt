Afficher les 10 premiers éléments de la table Produit triés par leur prix unitaire 

SELECT * 
    FROM Produit
    LIMIT 10;

Afficher les trois produits les plus chers

SELECT * 
    FROM Produit
    ORDER BY PrixUnit DESC
    LIMIT 3;

Lister les clients français installés à Paris dont le numéro de fax n'est pas 
renseigné

SELECT * 
    FROM Client
    WHERE Ville = "Paris" AND Fax is Null;

Lister les clients français, allemands et canadiens

SELECT * 
    FROM Client
    WHERE Pays IN ("Suisse", "Allemagne", "Belgique");

.Lister les clients dont le nom de société contient "restaurant"

SELECT * 
    FROM Client
    WHERE Societe LIKE "%restaurant%";

Lister les descriptions des catégories de produits (table Categorie)

SELECT Description 
    FROM Categorie;

Lister les différents pays et villes des clients, le tout trié par ordre alphabétique 
croissant du pays et décroissant de la ville

SELECT DISTINCT Pays,Ville FROM `client`  
ORDER BY Pays, Ville DESC

Lister les fournisseurs français, en affichant uniquement le nom, le contact et la 
ville, triés par ville


SELECT Societe,Contact,Ville FROM `fournisseur` ORDER BY Ville ASC

Lister les produits (nom en majuscule et référence) du fournisseur n° 8 dont le prix
unitaire est entre 10 et 100 euros, en renommant les attributs pour que ça soit 
explicite

SELECT UPPER(NomProd) as "Produit du fournisseur 8",
        RefProd AS "Référence"
    FROM Produit
    WHERE NoFour = 8
    AND PrixUnit BETWEEN 10 AND 100;

La table DetailsCommande contient l'ensemble des lignes d'achat de chaque commande.
Calculer, pour la commande numéro 10251, pour chaque produit acheté dans celle-ci, le
montant de la ligne d'achat en incluant la remise (stockée en proportion dans la table).
Afficher donc (dans une même requête) :

SELECT PrixUnit,
        ROUND(Remise * 100) || "%" as Remise,
        Qte as "Quantité",
        ROUND(PrixUnit * Remise * Qte, 2) as "Montant Remise",
        ROUND(PrixUnit * Qte * (1 - Remise), 2) as "Montant à payer"
    FROM DetailCommande
    WHERE NoCom = 10251;

A partir de la table Produit, afficher "Produit non disponible" lorsque 
l'attribut Indisponible vaut 1, et "Produit disponible" sinon.

SELECT Indisponible,
  CASE 
    WHEN Indisponible = 1 THEN "Produit non disponible"
    ELSE "Produit disponible"
  END AS dispo
FROM `produit`

Dans une même requête, sur la table Client :
* Concaténer les champs Adresse, Ville, CodePostal et Pays dans un nouveau 
champ nommé Adresse_complète, pour avoir : Adresse, CodePostal, Ville, Pays
* Extraire les deux derniers caractères des codes clients
* Mettre en minuscule le nom des sociétés
* Remplacer le terme "Owner" par "Freelance" dans Fonction
* Indiquer la présence du terme "Manager" dans Fonction

SELECT Fonction,
REPLACE(Fonction, 'Owner', 'Freelance') AS Fonctions,
LOWER(Societe) AS Societe, 
SUBSTR(Codecli,4,5) AS CodeCli ,
SUBSTR(Codecli,-2)
RIGHT(Codecli,2)
SUBSTR(Codecli,length(Codecli)-1,2)

CONCAT(Adresse ," ",Ville," ",Codepostal," ",Pays) AS Adresse_Complete
FROM `client` WHERE  `fonction` LIKE '%Manager%'

Afficher le jour de la semaine en lettre pour toutes les dates de commande, 
afficher "week-end" pour les samedi et dimanche,

SELECT NoCom, DateCom,
 CASE
      WHEN DATE_FORMAT(DateCom, "%W") IN ('Saturday', 'Sunday') THEN 'week-end'
      ELSE DATE_FORMAT(DateCom, "%W")
    END
    AS 'jour_commande'

FROM Commande;

Calculer le nombre de jours entre la date de la commande (DateCom) et la date 
butoir de livraison (ALivAvant), pour chaque commande, On souhaite aussi 
contacter les clients 1 mois après leur commande. ajouter la date correspondante 
pour chaque commande

SELECT NoCom, ALivAvant, DateEnv,
        CASE  
            WHEN ALivAvant <= DateEnv THEN "envoi tardif"
            WHEN DateEnv IS NULL THEN "à envoyer"
            ELSE "envoi ok"
        END as "Envoi"
    FROM Commande;

Calculer le nombre d'employés qui sont "Sales Manager"

SELECT COUNT(*) 
    FROM Employe
    WHERE Fonction = "Sales Manager";

Calculer le nombre de produits de catégorie 1, des fournisseurs 1 et 18

SELECT COUNT(*) 
    FROM Produit
    WHERE CodeCateg = 1
    AND NoFour IN (1, 18);

Calculer le nombre de pays différents de livraison

SELECT COUNT(DISTINCT PaysLiv) 
    FROM Commande;

Calculer le nombre de commandes réalisées le en Aout 2006.

SELECT COUNT(`noCom`) 
FROM `commande`
WHERE `dateCom` LIKE '%06-08%'

Calculer le coût du port minimum et maximum des commandes , ainsi que le coût
moyen du port pour les commandes du client dont le code est "QUICK"
(attribut CodeCli)

SELECT ROUND(AVG(Port), 2) as PortMoyen
    FROM Commande
    WHERE CodeCli = "QUICK";

Pour chaque messager (par leur numéro : 1, 2 et 3), donner le montant total des 
frais de port leur correspondant

SELECT SUM(Port)
    FROM Commande
    WHERE NoMess = 1;

SELECT SUM(Port)
    FROM Commande
    WHERE NoMess = 2;

SELECT SUM(Port)
    FROM Commande
    WHERE NoMess = 3;

Donner le nombre d'employés par fonction

SELECT Fonction, COUNT(*) AS NbEmployes
    FROM Employe
    GROUP BY Fonction;

Donner le nombre de catégories de produits fournis par chaque fournisseur

SELECT NoFour,
        COUNT(*) AS NbProduitsFournis  ,
        COUNT(DISTINCT CodeCateg) AS NbCategories
    FROM Produit
    GROUP BY NoFour;

Donner le prix moyen des produits pour chaque fournisseur et chaque catégorie 
de produits fournis par celui-ci

SELECT NoFour, CodeCateg, 
        AVG(PrixUnit) AS PrixMoyen
    FROM Produit
    GROUP By NoFour, CodeCateg;

Lister les fournisseurs ne fournissant qu'un seul produit

SELECT NoFour
    FROM Produit
    GROUP BY NoFour
    HAVING COUNT(*) = 1;

Lister les fournisseurs ne fournissant qu'une seule catégorie de produits

SELECT NoFour
    FROM Produit
    GROUP BY NoFour
    HAVING COUNT(DISTINCT CodeCateg) = 1;

Lister le Products le plus cher pour chaque fournisseur, pour les Products de plus 
de 50 euro

SELECT NoFour, RefProd, NomProd, PrixUnit
    FROM Produit
    WHERE PrixUnit >= 50
    GROUP BY NoFour
    HAVING PrixUnit = MAX(PrixUnit);

Récupérer les informations des fournisseurs pour chaque produit

SELECT *
    FROM Produit NATURAL JOIN Fournisseur;

Afficher les informations des commandes du client "Lazy K Kountry Store"

SELECT *
    FROM Client NATURAL JOIN Commande
    WHERE Societe = "Lazy K Kountry Store";

Afficher le nombre de commande pour chaque messager (en indiquant son nom)

SELECT NomMess, COUNT(*) as "Nb Commandes"
    FROM Messager NATURAL JOIN Commande
    GROUP BY NomMess;

Récupérer les informations des fournisseurs pour chaque produit, avec une 
jointure interne

SELECT *
    FROM Produit INNER JOIN Fournisseur
        ON Produit.NoFour = Fournisseur.NoFour;

Afficher les informations des commandes du client "Lazy K Kountry Store", avec 
une jointure interne

SELECT *
    FROM Commande INNER JOIN Client
        ON Commande.CodeCli = Client.Codecli
    WHERE Societe = "Lazy K Kountry Store";

Afficher le nombre de commande pour chaque messager (en indiquant son nom), 
avec une jointure interne

SELECT NomMess, COUNT(*)
    FROM Commande INNER JOIN Messager
        ON Commande.NoMess = Messager.NoMess
    GROUP BY NomMess;

Compter pour chaque produit, le nombre de commandes où il apparaît, même 
pour ceux dans aucune commande

SELECT NomProd, COUNT(DISTINCT NoCom)
    FROM Produit LEFT OUTER JOIN DetailCommande
        ON Produit.RefProd = DetailCommande.RefProd
    GROUP BY NomProd;

Lister les produits n'apparaissant dans aucune commande

SELECT NomProd
    FROM Produit LEFT OUTER JOIN DetailCommande
        ON Produit.RefProd = DetailCommande.RefProd
    GROUP BY NomProd
    HAVING COUNT(DISTINCT NoCom) = 0;

Existe-t'il un employé n'ayant enregistré aucune commande ?

SELECT Nom, Prenom
    FROM Employe LEFT OUTER JOIN Commande
        ON Employe.NoEmp = Commande.NoEmp
    GROUP BY Nom, Prenom
    HAVING COUNT(DISTINCT NoCom) = 0;

Récupérer les informations des fournisseurs pour chaque produit, avec jointure à 
la main
SELECT *
    FROM Produit, Fournisseur
    WHERE Produit.NoFour = Fournisseur.NoFour;

Afficher les informations des commandes du client "Lazy K Kountry Store", avec 
jointure à la main

SELECT *
    FROM Commande, Client
    WHERE Commande.CodeCli = Client.Codecli
    AND Societe = "Lazy K Kountry Store";

Afficher le nombre de commande pour chaque messager (en indiquant son nom), 
avec jointure à la main

SELECT NomMess, COUNT(*)
    FROM Commande, Messager
    WHERE Commande.NoMess = Messager.NoMess
    GROUP BY NomMess;

Lister les employés n'ayant jamais effectué une commande, via une sous-requête

SELECT Nom, Prenom
    FROM Employe
    WHERE NoEmp NOT IN (SELECT NoEmp
                            FROM Commande);

Nombre de produits proposés par la société fournisseur "Ma Maison", via une 
sous-requête

SELECT COUNT(*)
    FROM Produit
    WHERE NoFour = (SELECT NoFour
                        FROM Fournisseur
                        WHERE Societe = "Mayumis");

Nombre de commandes passées par des employés sous la responsabilité 
de "Buchanan Steven"
SELECT COUNT(*)
    FROM Commande
    WHERE NoEmp IN (SELECT NoEmp
                        FROM Employe
                        WHERE RendCompteA = (SELECT NoEmp
                                                FROM Employe
                                                WHERE Nom = "Buchanan"
                                                AND Prenom = "Steven"));

Lister les produits n'ayant jamais été commandés, à l'aide de l'opérateur EXISTS

SELECT NomProd
    FROM Produit
    WHERE NOT EXISTS (SELECT *
                        FROM DetailCommande
                        WHERE RefProd = Produit.RefProd);

Lister les fournisseurs dont au moins un produit a été livré en France    

SELECT Societe
    FROM Fournisseur
    WHERE EXISTS (SELECT * 
                    FROM Produit, DetailCommande, Commande
                    WHERE Produit.RefProd = DetailCommande.RefProd
                    AND DetailCommande.NoCom = Commande.NoCom
                    AND PaysLiv = "France"
                    AND NoFour = Fournisseur.NoFour);

Liste des fournisseurs qui ne proposent que des boissons (drinks)

SELECT Societe
    FROM Fournisseur
    WHERE EXISTS (SELECT *
                    FROM Produit, Categorie
                    WHERE Produit.CodeCateg = Categorie.CodeCateg
                    AND NoFour = Fournisseur.NoFour
                    AND NomCateg = "Boisson")
    AND NOT EXISTS (SELECT *
                    FROM Produit, Categorie
                    WHERE Produit.CodeCateg = Categorie.CodeCateg
                    AND NoFour = Fournisseur.NoFour
                    AND NomCateg <> "Boisson");                 
                                              
Lister les employés (nom et prénom) étant "Representative" ou étant basé 
au Royaume-Uni (UK)

SELECT Nom, Prenom
    FROM Employe
    WHERE Fonction = "Représentant(e)"
UNION  
SELECT Nom, Prenom
    FROM Employe
    WHERE Pays = "Royaume-Uni";

Lister les clients (société et pays) ayant commandés via un employé situé à 
Londres ("London" pour rappel) ou ayant été livré par "Speedy Express"

SELECT Societe, Cl.Pays
    FROM Client Cl, Commande Co, Employe E
    WHERE Cl.CodeCli = Co.CodeCli
    AND Co.NoEmp = E.NoEmp
    AND E.Ville = "London"
UNION
SELECT Societe, Cl.Pays
    FROM Client Cl, Commande Co, Messager M
    WHERE Cl.CodeCli = Co.CodeCli
    AND Co.NoMess = M.NoMess
    AND NomMess = "Speedy Express";

Lister les employés (nom et prénom) étant "Representative" et étant basé 
au Royaume-Uni (UK)

SELECT Nom, Prenom
    FROM Employe
    WHERE Fonction = "Représentant(e)"
INTERSECT
SELECT Nom, Prenom
    FROM Employe
    WHERE Pays = "Royaume-Uni";

2.Lister les clients (société et pays) ayant commandés via un employé basé 
à "Seattle" et ayant commandé des "Desserts"

SELECT Societe, Cl.Pays
    FROM Client Cl, Commande Co, Employe E
    WHERE Cl.CodeCli = Co.CodeCli
    AND Co.NoEmp = E.NoEmp
    AND E.Ville = "Seattle"
INTERSECT
SELECT Societe, Cl.Pays
    FROM Client Cl, Commande Co, DetailCommande DC,
         Produit P, Categorie Ca
    WHERE Cl.CodeCli = Co.CodeCli
    AND Co.NoCom = DC.NoCom
    AND DC.RefProd = P.RefProd
    AND P.CodeCateg = Ca.CodeCateg
    AND NomCateg = "Desserts";

Lister les employés (nom et prénom) étant "Representative" mais n'étant pas 
basé au Royaume-Uni (UK)

SELECT Nom, Prenom
    FROM Employe
    WHERE Fonction = "Représentant(e)"
EXCEPT
SELECT Nom, Prenom
    FROM Employe
    WHERE Pays = "Royaume-Uni";

Lister les clients (société et pays) ayant commandés via un employé situé à 
Londres ("London" pour rappel) et n'ayant jamais été livré par "United Package"

SELECT Societe, Cl.Pays
    FROM Client Cl, Commande Co, Employe E
    WHERE Cl.CodeCli = Co.CodeCli
    AND Co.NoEmp = E.NoEmp
    AND E.Ville = "London"
EXCEPT
SELECT Societe, Cl.Pays
    FROM Client Cl, Commande Co, Messager M
    WHERE Cl.CodeCli = Co.CodeCli
    AND Co.NoMess = M.NoMess
    AND NomMess = "United Package";

    

